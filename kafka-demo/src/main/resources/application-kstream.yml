### Spring Kafka
---
spring:
  kafka:
    streams:
      application-id: streamer.local
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$LongSerde
        default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        # non-recoverable error, log the error and skip to process next message
        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
        # when `processing.guarantee` is configured to exactly_once_v2, Kafka Streams sets the internal
        # embedded producer client with a transaction id to enable the idempotence and transactional
        # messaging features, and also sets its consumer client with the read-committed mode to only
        # fetch messages from committed transactions from the upstream producers.
        processing.guarantee: exactly_once_v2
        # use a similar replication factor as source topic to improve fault tolerance
        replication.factor: 1 # only 1 kafka broker in local docker
        # the number of concurrency to execute stream task, bounded by the number of source topic's partition
        num.stream.threads: 1

---
app:
  config:
    input-topic: test_in
    output-topic: test_out
    state-store: test_cache